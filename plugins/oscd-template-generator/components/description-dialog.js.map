{"version":3,"file":"description-dialog.js","sourceRoot":"","sources":["../../components/description-dialog.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements/lit-element.js';\nimport { LitElement, html, css } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { MdOutlinedTextField } from '@scopedelement/material-web/textfield/MdOutlinedTextField.js';\nimport { MdDialog } from '@scopedelement/material-web/dialog/dialog.js';\nimport { MdTextButton } from '@scopedelement/material-web/button/text-button.js';\n\nexport class DescriptionDialog extends ScopedElementsMixin(LitElement) {\n  static scopedElements = {\n    'md-dialog': MdDialog,\n    'md-text-button': MdTextButton,\n    'md-outlined-text-field': MdOutlinedTextField,\n  };\n\n  @property({ type: Array })\n  cdClasses: string[] = [];\n\n  @property({ type: Function })\n  onConfirm!: (description: string) => void;\n\n  @property({ type: Function })\n  onCancel!: () => void;\n\n  @query('md-dialog')\n  dialog!: MdDialog;\n\n  @query('#lnode-type-description')\n  description!: MdOutlinedTextField;\n\n  get open() {\n    return this.dialog?.open ?? false;\n  }\n\n  show() {\n    this.dialog?.show();\n  }\n\n  close() {\n    if (this.description) {\n      this.description.errorText = '';\n      this.description.error = false;\n      this.description.value = '';\n    }\n    this.dialog?.close();\n  }\n\n  private validate(): boolean {\n    let isValid = true;\n\n    if (!this.description?.checkValidity()) {\n      this.description.errorText = 'Not a valid description.';\n      this.description.error = true;\n      isValid = false;\n    } else {\n      this.description.errorText = '';\n      this.description.error = false;\n    }\n\n    return isValid;\n  }\n\n  private resetErrorText(e: Event): void {\n    if (this.description.errorText && this.description.checkValidity()) {\n      this.description.errorText = '';\n      this.description.error = false;\n    }\n  }\n\n  private handleConfirm() {\n    if (!this.validate()) return;\n    this.onConfirm(this.description.value);\n    this.close();\n  }\n\n  render() {\n    return html`\n      <md-dialog @closed=${() => this.close()}>\n        <div slot=\"headline\">Add LNodeType Description</div>\n        <div slot=\"content\" class=\"dialog-content\">\n          <md-outlined-text-field\n            id=\"lnode-type-description\"\n            label=\"LNodeType Description\"\n            required\n            @input=${this.resetErrorText}\n          ></md-outlined-text-field>\n        </div>\n        <div slot=\"actions\">\n          <md-text-button id=\"cancel-button\" @click=${this.close} type=\"button\"\n            >Cancel</md-text-button\n          >\n          <md-text-button\n            id=\"confirm-button\"\n            @click=${this.handleConfirm}\n            type=\"button\"\n            >Add</md-text-button\n          >\n        </div>\n      </md-dialog>\n    `;\n  }\n\n  static styles = css`\n    md-text-button {\n      text-transform: uppercase;\n    }\n    .dialog-content {\n      display: flex;\n      flex-direction: column;\n      gap: 12px;\n    }\n  `;\n}\n"]}