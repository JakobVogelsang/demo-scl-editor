{"version":3,"file":"preview-dialog.spec.js","sourceRoot":"","sources":["../../components/preview-dialog.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AACzD,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEpD,cAAc,CAAC,MAAM,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC;AAEvD,MAAM,IAAI,GAAG;IACX,GAAG,EAAE;QACH,IAAI,EAAE,KAAK;QACX,OAAO,EAAE,YAAY;QACrB,IAAI,EAAE,KAAK;QACX,MAAM,EAAE,OAAO;QACf,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE;YACR,GAAG,EAAE;gBACH,IAAI,EAAE,KAAK;gBACX,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,SAAS;gBACjB,QAAQ,EAAE,GAAG;gBACb,QAAQ,EAAE,EAAE;aACb;SACF;KACF;IACD,GAAG,EAAE;QACH,IAAI,EAAE,KAAK;QACX,OAAO,EAAE,YAAY;QACrB,IAAI,EAAE,KAAK;QACX,MAAM,EAAE,OAAO;QACf,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,EAAE;KACb;CACF,CAAC;AAEF,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,IAAI,OAAsB,CAAC;IAE3B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,mCAAmC,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC;QAC3B,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACpB,OAAO,CAAC,SAAS,GAAG;YAClB,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;YAChB,GAAG,EAAE,EAAE;SACR,CAAC;QACF,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACpD,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC9C,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC;QACvB,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC;QACzB,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC;QACvB,MAAM,OAAO,CAAC,cAAc,CAAC;QAC7B,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { PreviewDialog } from './preview-dialog.js';\n\ncustomElements.define('preview-dialog', PreviewDialog);\n\nconst tree = {\n  DO1: {\n    name: 'DO1',\n    tagName: 'DataObject',\n    type: 'SPS',\n    descID: 'desc1',\n    presCond: 'O',\n    children: {\n      DA1: {\n        name: 'DA1',\n        tagName: 'DataAttribute',\n        type: 'BOOLEAN',\n        descID: 'descDA1',\n        presCond: 'M',\n        children: {},\n      },\n    },\n  },\n  DO2: {\n    name: 'DO2',\n    tagName: 'DataObject',\n    type: 'INS',\n    descID: 'desc2',\n    presCond: 'O',\n    children: {},\n  },\n};\n\ndescribe('PreviewDialog', () => {\n  let element: PreviewDialog;\n\n  beforeEach(async () => {\n    element = await fixture(html`<preview-dialog></preview-dialog>`);\n  });\n\n  it('renders the selected LNodeType', async () => {\n    element.lNodeType = 'LPHD';\n    element.tree = tree;\n    element.selection = {\n      DO1: { DA1: {} },\n      DO2: {},\n    };\n    expect(element.xmlContent).to.include('<LNodeType');\n    expect(element.xmlContent).to.include('LPHD');\n    expect(element.xmlContent).to.include('DO1');\n    expect(element.xmlContent).to.include('DA1');\n    expect(element.xmlContent).to.include('DO2');\n  });\n\n  it('shows a message if no data is selected', async () => {\n    element.lNodeType = '';\n    element.tree = undefined;\n    element.selection = {};\n    await element.updateComplete;\n    expect(element.xmlContent).to.include('No data selected for preview');\n  });\n});\n"]}