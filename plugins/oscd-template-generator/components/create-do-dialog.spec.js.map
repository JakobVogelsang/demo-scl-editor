{"version":3,"file":"create-do-dialog.spec.js","sourceRoot":"","sources":["../../components/create-do-dialog.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html, waitUntil } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\nimport { CreateDataObjectDialog } from './create-do-dialog.js';\n\ncustomElements.define('create-data-object-dialog', CreateDataObjectDialog);\n\ndescribe('CreateDataObjectDialog', () => {\n  let element: CreateDataObjectDialog;\n  let confirmButton: HTMLElement;\n  let cancelButton: HTMLElement;\n  let confirmSpy: SinonSpy;\n\n  const cdClasses = ['APC', 'ORG', 'SPS'];\n  const tree = {\n    AnOut1: {\n      presCond: 'Omulti',\n      type: 'APC',\n    },\n    Beh: {\n      presCond: '0',\n      type: 'ORG',\n    },\n    Ind1: {\n      presCond: 'Omulti',\n      type: 'SPS',\n    },\n  };\n\n  beforeEach(async () => {\n    confirmSpy = spy();\n\n    element = await fixture(html`<create-data-object-dialog\n      .cdClasses=${cdClasses}\n      .tree=${tree}\n      .onConfirm=${confirmSpy}\n    >\n    </create-data-object-dialog>`);\n\n    confirmButton = element.shadowRoot?.querySelector('#confirm-btn')!;\n    cancelButton = element.shadowRoot?.querySelector('#cancel-btn')!;\n  });\n\n  it('should call onConfirm for valid form', () => {\n    const type = 'APC';\n    const doName = 'AnOut2';\n\n    element.doName.value = doName;\n    element.cdcType.value = type;\n\n    confirmButton.click();\n\n    expect(confirmSpy.callCount).to.equal(1);\n    expect(confirmSpy.calledWith(type, doName)).to.be.true;\n  });\n\n  it('clears inputs and closes the dialog on reset button click', async () => {\n    element.cdcType.value = 'ACD';\n    element.doName.value = 'TestDO';\n\n    cancelButton.click();\n\n    await waitUntil(() => !element.open);\n    expect(element.cdcType).to.have.property('value', '');\n    expect(element.doName).to.have.property('value', '');\n    expect(element.open).to.be.false;\n  });\n\n  describe('form validation', () => {\n    it('should set DO name in use error', () => {\n      element.cdcType.value = 'ORG';\n      element.doName.value = 'Beh';\n\n      confirmButton.click();\n\n      expect(confirmSpy.callCount).to.equal(0);\n      expect(element.doName.error).to.be.true;\n      expect(element.doName.errorText).to.equal('DO name already in use');\n    });\n\n    it('should set invalid CDC error', () => {\n      element.cdcType.value = 'ORG';\n      element.doName.value = 'Ind2';\n\n      confirmButton.click();\n\n      expect(confirmSpy.callCount).to.equal(0);\n      expect(element.cdcType.error).to.be.true;\n      expect(element.cdcType.errorText).to.equal(\n        'CDC type invalid for this DO'\n      );\n    });\n\n    it('should set custom namespace needed error', async () => {\n      element.cdcType.value = 'ORG';\n      element.doName.value = 'NewDOName';\n\n      await new Promise(r => setTimeout(r, 400));\n      confirmButton.click();\n\n      expect(confirmSpy.callCount).to.equal(0);\n      expect(element.namespace.error).to.be.true;\n      expect(element.namespace.errorText).to.equal(\n        'Custom namespace required.'\n      );\n    });\n  });\n});\n"]}