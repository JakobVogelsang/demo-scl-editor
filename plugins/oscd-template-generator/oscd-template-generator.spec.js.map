{"version":3,"file":"oscd-template-generator.spec.js","sourceRoot":"","sources":["../oscd-template-generator.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, expect, html, waitUntil } from '@open-wc/testing';\nimport { restore, SinonSpy, spy } from 'sinon';\nimport { Insert } from '@openenergytools/open-scd-core';\n\nimport TemplateGenerator from './oscd-template-generator.js';\nimport { lNodeSelection } from './oscd-template-generator.testfiles.js';\n\ncustomElements.define('template-generator', TemplateGenerator);\n\nexport const sclDocString = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SCL version=\"2007\" revision=\"B\" xmlns=\"http://www.iec.ch/61850/2003/SCL\">\n  <DataTypeTemplates></DataTypeTemplates>\n</SCL>`;\n\ndescribe('TemplateGenerator', () => {\n  let element: TemplateGenerator;\n  beforeEach(async () => {\n    element = await fixture(html`<template-generator></template-generator>`);\n  });\n\n  it('displays no action button', () =>\n    expect(element.shadowRoot?.querySelector('md-fab')).to.not.exist);\n\n  it('starts with LPHD selected', () => {\n    expect(element).to.have.property('lNodeType', 'LPHD');\n    expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  it('displays a button to create a new DO', () => {\n    expect(element.shadowRoot?.querySelector('md-outlined-button')).to.exist;\n    expect(\n      element.shadowRoot?.querySelector('md-outlined-button')\n    ).to.include.text('Add Data Object');\n  });\n\n  describe('dialog behavior', () => {\n    it('opens a dialog on \"Add Data Object\" button click', async () => {\n      expect(element.createDOdialog.open).to.be.false;\n\n      const button = element.shadowRoot?.querySelector(\n        'md-outlined-button'\n      ) as HTMLElement;\n      button.click();\n\n      await waitUntil(() => element.createDOdialog.open);\n      expect(element.createDOdialog.open).to.be.true;\n    });\n\n    it('validates the form fields', async () => {\n      const dialog = element.createDOdialog;\n      dialog.show();\n      await waitUntil(() => dialog.open);\n      expect(dialog.cdcType.error).to.be.false;\n      expect(dialog.doName.error).to.be.false;\n\n      const confirmButton = dialog.shadowRoot?.querySelector(\n        '#confirm-btn'\n      ) as HTMLElement;\n      confirmButton.click();\n\n      expect(dialog.cdcType.error).to.be.true;\n      expect(dialog.cdcType.errorText).to.equal(\n        'Please select a common data class.'\n      );\n      expect(dialog.doName.error).to.be.true;\n      expect(dialog.doName.errorText).to.equal('Not a valid DO name.');\n      const doNameInput = dialog.shadowRoot?.querySelector(\n        '#do-name'\n      ) as HTMLInputElement;\n      doNameInput.value = 'ValidDOName';\n      doNameInput.dispatchEvent(new Event('input'));\n      expect(dialog.doName.errorText).to.equal('');\n    });\n\n    it('creates a new DO on form submit', async () => {\n      const dialog = element.createDOdialog;\n      dialog.show();\n      await waitUntil(() => dialog.open);\n\n      const treeBefore = JSON.parse(JSON.stringify(element.treeUI.tree));\n\n      const doNameInput = dialog.shadowRoot?.querySelector(\n        '#do-name'\n      ) as HTMLInputElement;\n      doNameInput.value = 'TestDO';\n      doNameInput.dispatchEvent(new Event('input'));\n\n      const cdcTypeSelect = dialog.shadowRoot?.querySelector(\n        '#cdc-type'\n      ) as HTMLSelectElement;\n      cdcTypeSelect.value = 'ACD';\n      cdcTypeSelect.dispatchEvent(new Event('input'));\n\n      dialog.namespace.value = 'custom-namespace';\n\n      const confirmButton = dialog.shadowRoot?.querySelector(\n        '#confirm-btn'\n      ) as HTMLElement;\n      confirmButton.click();\n\n      await element.updateComplete;\n\n      const treeAfter = JSON.parse(JSON.stringify(element.treeUI.tree));\n      expect(treeAfter).to.not.deep.equal(treeBefore);\n      expect(treeAfter.TestDO).to.have.property('type', 'ACD');\n      expect(treeAfter.TestDO).to.have.property('tagName', 'DataObject');\n      expect(treeAfter.TestDO).to.have.property('descID', '');\n      expect(treeAfter.TestDO).to.have.property('presCond', 'O');\n      expect(treeAfter.TestDO.children.dataNs.val).to.equal('custom-namespace');\n      expect(treeAfter.TestDO.children.dataNs.mandatory).to.be.true;\n    });\n\n    it('displays a success notification when a Data Object is created', async () => {\n      const dialog = element.createDOdialog;\n      dialog.show();\n      await element.updateComplete;\n\n      const doNameInput = dialog.doName;\n      doNameInput.value = 'TestDO';\n      doNameInput.dispatchEvent(new Event('input'));\n\n      const cdcTypeSelect = dialog.cdcType;\n      cdcTypeSelect.value = 'ACD';\n      cdcTypeSelect.dispatchEvent(new Event('input'));\n\n      dialog.namespace.value = 'custom-namespace';\n\n      const confirmButton = dialog.shadowRoot?.querySelector(\n        '#confirm-btn'\n      ) as HTMLElement;\n      confirmButton.click();\n\n      await waitUntil(() => {\n        const snackbar = element.shadowRoot?.querySelector('oscd-snackbar');\n        return (\n          snackbar &&\n          (snackbar as any).shadowRoot?.textContent?.includes(\n            \"Data Object 'TestDO' created successfully.\"\n          )\n        );\n      });\n      const snackbar = element.shadowRoot?.querySelector(\n        'oscd-snackbar'\n      ) as HTMLElement & { message?: string; type?: string };\n      expect(snackbar).to.exist;\n      expect(snackbar.shadowRoot?.textContent).to.include(\n        \"Data Object 'TestDO' created successfully.\"\n      );\n    });\n\n    it('shows an error notification if Data Object creation fails', async () => {\n      const dialog = element.createDOdialog;\n      dialog.show();\n      await waitUntil(() => dialog.open);\n\n      dialog.doName.value = 'TestDO';\n      dialog.cdcType.value = 'ACD';\n      dialog.namespace.value = 'custom-namespace';\n\n      const originalCreateDataObject = element['createDataObject'];\n      element['createDataObject'] = () => {\n        throw new Error('fail');\n      };\n\n      const confirmButton = dialog.shadowRoot?.querySelector(\n        '#confirm-btn'\n      ) as HTMLElement;\n      confirmButton.click();\n\n      // Wait up to 5 seconds for the snackbar to appear\n      await waitUntil(\n        () => {\n          const snackbar = element.shadowRoot?.querySelector('oscd-snackbar');\n          return (\n            snackbar &&\n            (snackbar as any).shadowRoot?.textContent?.includes(\n              'Failed to create Data Object. Please try again.'\n            )\n          );\n        },\n        undefined,\n        { timeout: 5000 }\n      );\n      const snackbar = element.shadowRoot?.querySelector(\n        'oscd-snackbar'\n      ) as HTMLElement & { message?: string; type?: string };\n      expect(snackbar).to.exist;\n      expect(snackbar.shadowRoot?.textContent).to.include(\n        'Failed to create Data Object. Please try again.'\n      );\n\n      element['createDataObject'] = originalCreateDataObject;\n    });\n  });\n\n  describe('given a loaded document', () => {\n    let listener: SinonSpy;\n    afterEach(restore);\n    beforeEach(async () => {\n      listener = spy();\n      element.addEventListener('oscd-edit-v2', listener);\n      element.doc = new DOMParser().parseFromString(\n        sclDocString,\n        'application/xml'\n      );\n      await element.updateComplete;\n    });\n\n    it('displays an action button', () => {\n      expect(element.shadowRoot?.querySelector('md-fab')).to.exist;\n    });\n\n    it('adds Templates on action button click', async () => {\n      (element.shadowRoot?.querySelector('md-fab') as HTMLElement).click();\n      const descriptionDialog = element.descriptionDialog;\n      descriptionDialog.show();\n      await descriptionDialog.updateComplete;\n      descriptionDialog.description.value = 'Test Description';\n\n      const confirmButton = descriptionDialog.shadowRoot?.querySelector(\n        '#confirm-button'\n      ) as HTMLElement;\n      confirmButton.click();\n      /* expect five calls for\n         - LPHD and its mandatory DOTypes\n           - PhyHealth and its mandatory EnumType\n             - stVal\n           - PhyNam\n           - Proxy\n       */\n      const edits = listener.args[0][0].detail.edit;\n      expect(edits).to.have.lengthOf(5);\n      edits.forEach((edit: any) => {\n        expect(edit).to.have.property(\n          'parent',\n          element.doc?.querySelector('DataTypeTemplates')\n        );\n        expect(edit).to.have.property('node');\n      });\n    });\n\n    it('adds missing DataTypeTemplates section on action button click', async () => {\n      element.doc?.querySelector('DataTypeTemplates')?.remove();\n      (element.shadowRoot?.querySelector('md-fab') as HTMLElement).click();\n\n      const descriptionDialog = element.descriptionDialog;\n      descriptionDialog.show();\n      await descriptionDialog.updateComplete;\n      descriptionDialog.description.value = 'Test Description';\n\n      const confirmButton = descriptionDialog.shadowRoot?.querySelector(\n        '#confirm-button'\n      ) as HTMLElement;\n      confirmButton.click();\n\n      // expect one more call for the DTT section\n      const edits = listener.args[0][0].detail.edit;\n      expect(edits).to.have.lengthOf(6);\n      expect(edits[0]).to.have.property('parent', element.doc?.documentElement);\n      expect(edits[0])\n        .property('node')\n        .to.have.property('tagName', 'DataTypeTemplates');\n    });\n\n    it('adds LNodeTypes, DOTypes, DATypes, and EnumTypes as requested', async () => {\n      element.lNodeType = 'LLN0';\n      element.reset();\n      await element.lNodeTypeUI?.updateComplete;\n      await element.updateComplete;\n\n      async function selectAll(column: number) {\n        const item = element.treeUI.shadowRoot?.querySelector(\n          `md-list:nth-of-type(${column + 1}) > md-list-item:first-of-type`\n        ) as HTMLElement;\n        item?.click();\n        await element.treeUI.updateComplete;\n        await element.updateComplete;\n      }\n\n      await selectAll(1);\n      await selectAll(2);\n      await selectAll(3);\n      await selectAll(4);\n      await selectAll(5);\n\n      (element.shadowRoot?.querySelector('md-fab') as HTMLElement).click();\n      const descriptionDialog = element.descriptionDialog;\n      descriptionDialog.show();\n      await descriptionDialog.updateComplete;\n      descriptionDialog.description.value = 'Test Description';\n\n      const confirmButton = descriptionDialog.shadowRoot?.querySelector(\n        '#confirm-button'\n      ) as HTMLElement;\n      confirmButton.click();\n\n      /* expect 30 calls for\n        LNodeType LLN0\n        DOType    Beh\n                  Diag\n                  GrRef\n                  Health\n                  InRef\n                  LEDRs\n                  Loc\n                  LocKey\n                  LocSta\n                  MltLev\n                  Mod\n                  NamPlt\n                  SwModKey\n        DAType    origin\n                  pulseConfig\n                  SBOw\n                  Oper\n                  Cancel\n                  SBOw\n                  Oper\n                  Cancel\n        EnumType  stVal\n                  subVal\n                  orCat\n                  cmdQual\n                  ctlModel\n                  sboClass\n                  stVal\n                  subVal\n       */\n      const edits = listener.args[0][0].detail.edit;\n      expect(edits).to.have.lengthOf(30);\n      const elms = edits.map((edit: { node: any }) => edit.node);\n      expect(\n        elms.filter((e: { tagName: string }) => e.tagName === 'LNodeType')\n      ).to.have.lengthOf(1);\n      expect(\n        elms.filter((e: { tagName: string }) => e.tagName === 'DOType')\n      ).to.have.lengthOf(13);\n      expect(\n        elms.filter((e: { tagName: string }) => e.tagName === 'DAType')\n      ).to.have.lengthOf(8);\n      expect(\n        elms.filter((e: { tagName: string }) => e.tagName === 'EnumType')\n      ).to.have.lengthOf(8);\n    }).timeout(10000); // selecting 550 paths for a full LLN0 is rather slow.\n\n    it('validates DOType inserts and IDs for multiple custom Data Objects', async () => {\n      element.lNodeType = 'GGIO';\n      element.reset();\n      await element.lNodeTypeUI?.updateComplete;\n      await element.updateComplete;\n\n      expect(Object.keys(element.treeUI.tree)).to.have.lengthOf(38);\n\n      const dataObjects = [\n        { name: 'AnOut2', type: 'APC' },\n        { name: 'CntVal2', type: 'BCR' },\n        { name: 'DPCSO2', type: 'DPC' },\n        { name: 'ISCSO2', type: 'INC' },\n        { name: 'InRef2', type: 'ORG' },\n        { name: 'SPCSO2', type: 'SPC' },\n        { name: 'Ind2', type: 'SPS' },\n      ];\n\n      for (const { name, type } of dataObjects) {\n        const dialog = element.createDOdialog;\n        dialog.show();\n        await waitUntil(() => dialog.open);\n\n        const doNameInput = dialog.shadowRoot?.querySelector(\n          '#do-name'\n        ) as HTMLInputElement;\n        doNameInput.value = name;\n        doNameInput.dispatchEvent(new Event('input'));\n\n        const cdcTypeSelect = dialog.shadowRoot?.querySelector(\n          '#cdc-type'\n        ) as HTMLSelectElement;\n        cdcTypeSelect.value = type;\n        cdcTypeSelect.dispatchEvent(new Event('input'));\n\n        const confirmButton = dialog.shadowRoot?.querySelector(\n          '#confirm-btn'\n        ) as HTMLElement;\n        confirmButton.click();\n\n        await waitUntil(() => !dialog.open, undefined, { timeout: 2000 });\n        await element.updateComplete;\n        expect(element.treeUI.tree[name]).to.exist;\n        expect(element.treeUI.tree[name]).to.have.property('type', type);\n        expect(element.treeUI.tree[name]).to.have.property(\n          'tagName',\n          'DataObject'\n        );\n        expect(element.treeUI.tree[name]).to.have.property('descID', '');\n        expect(element.treeUI.tree[name]).to.have.property('presCond', 'O');\n        dialog.close();\n      }\n\n      expect(Object.keys(element.treeUI.tree)).to.have.lengthOf(45);\n\n      element.treeUI.selection = lNodeSelection;\n      const descriptionDialog = element.descriptionDialog;\n      descriptionDialog.show();\n      await descriptionDialog.updateComplete;\n      descriptionDialog.description.value = 'Test Description';\n\n      const confirmButton = descriptionDialog.shadowRoot?.querySelector(\n        '#confirm-button'\n      ) as HTMLElement;\n      confirmButton.click();\n      await element.updateComplete;\n\n      const inserts = listener.args[0][0].detail.edit;\n      const insertedDOs = inserts.filter(\n        (insert: Insert) => (insert.node as Element).tagName === 'DOType'\n      );\n      const expectedIds = [\n        'Beh$oscd$_',\n        ...dataObjects.map(({ name }) => `${name}$oscd$_`),\n      ];\n\n      insertedDOs.forEach((insert: Insert, idx: number) => {\n        const id = (insert.node as Element).getAttribute('id');\n        expect(id, `Insert ID at index ${idx} is incorrect`).to.include(\n          expectedIds[idx]\n        );\n      });\n    }).timeout(10000);\n  });\n});\n"]}